#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:

  edv.example.com: # load balancer in front of EDV instances
    container_name: edv.example.com
    image: nginx:latest
    ports:
      - 8076:8076
    volumes:
      - ../keys/tls:/etc/nginx/certs
      - ./nginx-config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - edv-1.example.com
      - edv-2.example.com

  edv-1.example.com:
    container_name: edv-1.example.com
    image: ${EDV_REST_IMAGE}:${EDV_REST_IMAGE_TAG}
    environment:
      - EDV_HOST_URL=${EDV_HOST}:${EDV_1_PORT}
      - EDV_HOST_URL_EXTERNAL=${EDV_HOST_URL_EXTERNAL}
      - EDV_DATABASE_TYPE=${EDV_DATABASE_TYPE}
      - EDV_DATABASE_URL=${EDV_DATABASE_URL}
      - EDV_DATABASE_PREFIX=${EDV_DATABASE_PREFIX}
      - EDV_LOG_LEVEL=debug
      - EDV_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - EDV_TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - EDV_TLS_KEY_FILE=/etc/tls/ec-key.pem
      - EDV_AUTH_TYPE=${EDV_AUTH_TYPE}
      - EDV_GNAP_SIGNING_KEY=/etc/gnap-priv-key.pem
      - EDV_AUTH_SERVER_URL=https://auth.trustbloc.local:8070
      - EDV_LOCALKMS_SECRETS_DATABASE_TYPE=${EDV_DATABASE_TYPE}
      - EDV_LOCALKMS_SECRETS_DATABASE_URL=${EDV_DATABASE_URL}
      - EDV_LOCALKMS_SECRETS_DATABASE_PREFIX=kms
    ports:
      - ${EDV_1_PORT}:${EDV_1_PORT}
    volumes:
      - ../keys:/etc
    command: start

  edv-2.example.com:
    container_name: edv-2.example.com
    image: ${EDV_REST_IMAGE}:${EDV_REST_IMAGE_TAG}
    environment:
      - EDV_HOST_URL=${EDV_HOST}:${EDV_2_PORT}
      - EDV_HOST_URL_EXTERNAL=${EDV_HOST_URL_EXTERNAL}
      - EDV_DATABASE_TYPE=${EDV_DATABASE_TYPE}
      - EDV_DATABASE_URL=${EDV_DATABASE_URL}
      - EDV_DATABASE_PREFIX=${EDV_DATABASE_PREFIX}
      - EDV_LOG_LEVEL=debug
      - EDV_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - EDV_TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - EDV_TLS_KEY_FILE=/etc/tls/ec-key.pem
      - EDV_AUTH_TYPE=${EDV_AUTH_TYPE}
      - EDV_GNAP_SIGNING_KEY=/etc/gnap-priv-key.pem
      - EDV_AUTH_SERVER_URL=https://auth.trustbloc.local:8070
      - EDV_LOCALKMS_SECRETS_DATABASE_TYPE=${EDV_DATABASE_TYPE}
      - EDV_LOCALKMS_SECRETS_DATABASE_URL=${EDV_DATABASE_URL}
      - EDV_LOCALKMS_SECRETS_DATABASE_PREFIX=kms
    ports:
      - ${EDV_2_PORT}:${EDV_2_PORT}
    volumes:
      - ../keys:/etc
    command: start

  mongodb.example.com:
    container_name: mongodb.example.com
    image: mongo:4.0.0
    ports:
      - "27017:27017"

  couchdb.example.com:
    container_name: couchdb.example.com
    image: ${COUCHDB_IMAGE}:${COUCHDB_IMAGE_TAG}
    ports:
      - "5984:5984"
    environment:
      - COUCHDB_USER=${COUCHDB_USERNAME}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    volumes:
      - ./couchdb-config/config.ini:/opt/couchdb/etc/local.d/config.ini

  auth.trustbloc.local:
    container_name: auth.trustbloc.local
    image: ${AUTH_REST_IMAGE}:${AUTH_REST_IMAGE_TAG}
    environment:
      - AUTH_REST_HOST_URL=0.0.0.0:8070
      - AUTH_REST_EXTERNAL_URL=https://auth.trustbloc.local:8070
      - AUTH_REST_TLS_CACERTS=/etc/keys/tls/ec-cacert.pem
      - AUTH_REST_TLS_SYSTEMCERTPOOL=true
      - AUTH_REST_TLS_SERVE_CERT=/etc/keys/tls/ec-pubCert.pem
      - AUTH_REST_TLS_SERVE_KEY=/etc/keys/tls/ec-key.pem
      - AUTH_REST_DATABASE_TYPE=mongodb
      - AUTH_REST_DATABASE_URL=mongodb://mongodb.example.com:27017
      - AUTH_REST_DATABASE_PREFIX=authrest_
      - AUTH_REST_OIDC_CALLBACK=https://auth.trustbloc.local:8070/oauth2/callback
      - AUTH_REST_OIDC_PROVIDERS_CONFIG=/etc/oidc-config/providers.yaml
      - AUTH_REST_SDS_DOCS_URL=https://TODO.docs.sds.org
      - AUTH_REST_SDS_OPSKEYS_URL=https://TODO.keys.sds.org
      - AUTH_REST_KEYSERVER_AUTH_URL=https://TODO.auth.keyserver.org
      - AUTH_REST_KEYSERVER_OPS_URL=https://TODO.ops.keyserver.org
      - AUTH_REST_HYDRA_URL=https://hydra.trustbloc.local:4445
      - AUTH_REST_API_TOKEN=test_token
      - AUTH_REST_COOKIE_AUTH_KEY=/etc/keys/session_cookies/auth.key
      - AUTH_REST_COOKIE_ENC_KEY=/etc/keys/session_cookies/enc.key
      - AUTH_REST_LOG_LEVEL=DEBUG
      - AUTH_REST_STATIC_IMAGES=/etc/static/images
      - GNAP_ACCESS_POLICY=/etc/gnap-config/access_policy.json
    ports:
      - 8070:8070
    entrypoint: ""
    command:  /bin/sh -c "sleep 30 && auth-rest start"
    volumes:
      - ../keys:/etc/keys
      - ./oidc-config:/etc/oidc-config
      - ./static:/etc/static
      - ./gnap-config:/etc/gnap-config
    depends_on:
      - hydra.trustbloc.local
      - mongodb.example.com
      - oidc.provider.example.com

  hydra.trustbloc.local:
    container_name: hydra.trustbloc.local
    image: oryd/hydra:${HYDRA_IMAGE_TAG}
    ports:
      - 4444:4444
      - 4445:4445
    command:  /bin/sh -c "hydra migrate sql --read-from-env --yes; hydra serve all"
    entrypoint: ""
    environment:
      - DSN=mysql://hydra:hydra-secret-pw@tcp(mysql:3306)/hydra?max_conns=20&max_idle_conns=4
      - URLS_SELF_ISSUER=https://localhost:4444/
      - URLS_CONSENT=https://auth.trustbloc.local:8070/hydra/consent
      - URLS_LOGIN=https://auth.trustbloc.local:8070/hydra/login
      - SECRETS_SYSTEM=testSecretsSystem
      - OIDC_SUBJECT_TYPES_SUPPORTED=public
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=testSecretsSystem
      - SERVE_TLS_KEY_PATH=/etc/tls/ec-key.pem
      - SERVE_TLS_CERT_PATH=/etc/tls/ec-pubCert.pem
    restart: unless-stopped
    volumes:
      - ../keys/tls:/etc/tls
    depends_on:
      - mysql

  mysql:
    container_name: mysql
    image: mysql:${MYSQL_IMAGE_TAG}
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: secret
    logging:
      driver: "none"
    volumes:
      - ./mysql-config:/docker-entrypoint-initdb.d

  oidc.provider.example.com:
    container_name: oidc.provider.example.com
    image: oryd/hydra:${HYDRA_IMAGE_TAG}
    ports:
      - 5555:5555
      - 5556:5556
    command: /bin/sh -c "hydra migrate sql --read-from-env --yes; tmp/hydra_configure.sh& hydra serve all"
    entrypoint: ""
    environment:
      - DSN=mysql://thirdpartyoidc:thirdpartyoidc-secret-pw@tcp(mysql:3306)/thirdpartyoidc?max_conns=20&max_idle_conns=4
      - URLS_SELF_ISSUER=https://oidc.provider.example.com:5555/
      - URLS_CONSENT=https://localhost:8099/mock/consent
      - URLS_LOGIN=https://localhost:8099/mock/login
      - SECRETS_SYSTEM=testSecretsSystem
      - OIDC_SUBJECT_TYPES_SUPPORTED=public
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=testSecretsSystem
      - SERVE_TLS_KEY_PATH=/etc/tls/ec-key.pem
      - SERVE_TLS_CERT_PATH=/etc/tls/ec-pubCert.pem
      - SERVE_PUBLIC_PORT=5555
      - SERVE_ADMIN_PORT=5556
    restart: unless-stopped
    volumes:
      - ../keys/tls:/etc/tls
      - ./hydra-config/hydra_configure.sh:/tmp/hydra_configure.sh
    depends_on:
      - mysql
      - mock.login.consent.example.com

  mock.login.consent.example.com:
    container_name: mock.login.consent.example.com
    image: ${MOCK_LOGIN_CONSENT_IMAGE}:latest
    environment:
      - LISTEN_ADDR=:8099
      - HYDRA_ADMIN_URL=https://oidc.provider.example.com:5556
      - TLS_CERT_PATH=/etc/tls/ec-pubCert.pem
      - TLS_KEY_PATH=/etc/tls/ec-key.pem
      - ROOT_CA_CERTS_PATH=/etc/tls/ec-cacert.pem
    ports:
      - 8099:8099
    volumes:
      - ../keys/tls:/etc/tls

  testnet.orb.local:
    container_name: testnet.orb.local
    image: ${SIDETREE_MOCK_IMAGE}:${SIDETREE_MOCK_IMAGE_TAG}
    environment:
      - SIDETREE_MOCK_TLS_CERTIFICATE=/etc/sidetree/tls/ec-pubCert.pem
      - SIDETREE_MOCK_TLS_KEY=/etc/sidetree/tls/ec-key.pem
      - SIDETREE_MOCK_HOST=0.0.0.0
      - SIDETREE_MOCK_PORT=443
      - SIDETREE_MOCK_DID_NAMESPACE=did:orb
      - SIDETREE_MOCK_DID_ALIASES=did:orb:testnet.orb.local
      - SIDETREE_MOCK_EXTERNAL_ENDPOINT=https://testnet.orb.local
      - SIDETREE_MOCK_WELLKNOWN_PATH=did-orb
    ports:
      - "443:443"
    volumes:
      - ../keys/tls:/etc/sidetree/tls
